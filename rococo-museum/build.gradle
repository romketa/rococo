plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.cloud.tools.jib' version '3.4.1'
}

group = 'guru.qa.rococo'
version = '1.0.0'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.grpc:spring-grpc-dependencies:0.6.0-SNAPSHOT'
	}
}

dependencies {
	implementation project(':rococo-grpc-common')

	implementation "org.springframework.grpc:spring-grpc-spring-boot-starter"
	implementation 'io.grpc:grpc-netty-shaded'
	modules {
		module("io.grpc:grpc-netty") {
			replacedBy("io.grpc:grpc-netty-shaded", "Use Netty shaded instead of regular Netty")
		}
	}
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.data:spring-data-commons'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation "org.flywaydb:flyway-core:${project.ext.flywayVersion}"
	implementation "org.flywaydb:flyway-mysql:${project.ext.flywayVersion}"
	annotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
	compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
	runtimeOnly "mysql:mysql-connector-java:${project.ext.mysqlDriverVersion}"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jib {
	container {
		ports = ['8093']
		jvmFlags = ["-Dspring.profiles.active=${System.env.PROFILE}"]
		environment = ['VAULT_TOKEN': "${System.env.VAULT_TOKEN}".toString()]
		creationTime = 'USE_CURRENT_TIMESTAMP'
		labels = [
				'maintainer': 'Roman Nagovitcyn @romketa',
				'version'   : "${project.version}".toString()
		]
	}
	from {
		image = "${project.ext.dockerImage}"
		platforms {
			platform {
				architecture = "${project.ext.dockerArch}"
				os = 'linux'
			}
		}
	}
	to {
		image = "${project.ext.dockerHubName}/${project.name}-${System.env.PROFILE}"
		tags = ['latest', "${project.version}"]
	}
}

tasks.jib.dependsOn test
tasks.jibDockerBuild.dependsOn test

tasks.register('printVersion') {
	doLast {
		println project.version
	}
}

tasks.named('test') {
	useJUnitPlatform()
}